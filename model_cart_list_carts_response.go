/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartListCartsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartListCartsResponse{}

// CartListCartsResponse struct for CartListCartsResponse
type CartListCartsResponse struct {
	Carts []CartCartData `json:"carts,omitempty"`
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

// NewCartListCartsResponse instantiates a new CartListCartsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartListCartsResponse() *CartListCartsResponse {
	this := CartListCartsResponse{}
	return &this
}

// NewCartListCartsResponseWithDefaults instantiates a new CartListCartsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartListCartsResponseWithDefaults() *CartListCartsResponse {
	this := CartListCartsResponse{}
	return &this
}

// GetCarts returns the Carts field value if set, zero value otherwise.
func (o *CartListCartsResponse) GetCarts() []CartCartData {
	if o == nil || IsNil(o.Carts) {
		var ret []CartCartData
		return ret
	}
	return o.Carts
}

// GetCartsOk returns a tuple with the Carts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartListCartsResponse) GetCartsOk() ([]CartCartData, bool) {
	if o == nil || IsNil(o.Carts) {
		return nil, false
	}
	return o.Carts, true
}

// HasCarts returns a boolean if a field has been set.
func (o *CartListCartsResponse) HasCarts() bool {
	if o != nil && !IsNil(o.Carts) {
		return true
	}

	return false
}

// SetCarts gets a reference to the given []CartCartData and assigns it to the Carts field.
func (o *CartListCartsResponse) SetCarts(v []CartCartData) {
	o.Carts = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *CartListCartsResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartListCartsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *CartListCartsResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *CartListCartsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o CartListCartsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartListCartsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Carts) {
		toSerialize["carts"] = o.Carts
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return toSerialize, nil
}

type NullableCartListCartsResponse struct {
	value *CartListCartsResponse
	isSet bool
}

func (v NullableCartListCartsResponse) Get() *CartListCartsResponse {
	return v.value
}

func (v *NullableCartListCartsResponse) Set(val *CartListCartsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCartListCartsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCartListCartsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartListCartsResponse(val *CartListCartsResponse) *NullableCartListCartsResponse {
	return &NullableCartListCartsResponse{value: val, isSet: true}
}

func (v NullableCartListCartsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartListCartsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



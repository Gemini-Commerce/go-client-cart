/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartAddProductsResponseItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartAddProductsResponseItem{}

// CartAddProductsResponseItem struct for CartAddProductsResponseItem
type CartAddProductsResponseItem struct {
	Id *string `json:"id,omitempty"`
	ProductGrn *string `json:"productGrn,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
	ConfigurationSelections []CartProductConfigurationSelection `json:"configurationSelections,omitempty"`
}

// NewCartAddProductsResponseItem instantiates a new CartAddProductsResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartAddProductsResponseItem() *CartAddProductsResponseItem {
	this := CartAddProductsResponseItem{}
	return &this
}

// NewCartAddProductsResponseItemWithDefaults instantiates a new CartAddProductsResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartAddProductsResponseItemWithDefaults() *CartAddProductsResponseItem {
	this := CartAddProductsResponseItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CartAddProductsResponseItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsResponseItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *CartAddProductsResponseItem) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CartAddProductsResponseItem) SetId(v string) {
	o.Id = &v
}

// GetProductGrn returns the ProductGrn field value if set, zero value otherwise.
func (o *CartAddProductsResponseItem) GetProductGrn() string {
	if o == nil || IsNil(o.ProductGrn) {
		var ret string
		return ret
	}
	return *o.ProductGrn
}

// GetProductGrnOk returns a tuple with the ProductGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsResponseItem) GetProductGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductGrn) {
		return nil, false
	}
	return o.ProductGrn, true
}

// IsSetProductGrn returns a boolean if a field has been set.
func (o *CartAddProductsResponseItem) IsSetProductGrn() bool {
	if o != nil && !IsNil(o.ProductGrn) {
		return true
	}

	return false
}

// SetProductGrn gets a reference to the given string and assigns it to the ProductGrn field.
func (o *CartAddProductsResponseItem) SetProductGrn(v string) {
	o.ProductGrn = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CartAddProductsResponseItem) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsResponseItem) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// IsSetQuantity returns a boolean if a field has been set.
func (o *CartAddProductsResponseItem) IsSetQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *CartAddProductsResponseItem) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetConfigurationSelections returns the ConfigurationSelections field value if set, zero value otherwise.
func (o *CartAddProductsResponseItem) GetConfigurationSelections() []CartProductConfigurationSelection {
	if o == nil || IsNil(o.ConfigurationSelections) {
		var ret []CartProductConfigurationSelection
		return ret
	}
	return o.ConfigurationSelections
}

// GetConfigurationSelectionsOk returns a tuple with the ConfigurationSelections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsResponseItem) GetConfigurationSelectionsOk() ([]CartProductConfigurationSelection, bool) {
	if o == nil || IsNil(o.ConfigurationSelections) {
		return nil, false
	}
	return o.ConfigurationSelections, true
}

// IsSetConfigurationSelections returns a boolean if a field has been set.
func (o *CartAddProductsResponseItem) IsSetConfigurationSelections() bool {
	if o != nil && !IsNil(o.ConfigurationSelections) {
		return true
	}

	return false
}

// SetConfigurationSelections gets a reference to the given []CartProductConfigurationSelection and assigns it to the ConfigurationSelections field.
func (o *CartAddProductsResponseItem) SetConfigurationSelections(v []CartProductConfigurationSelection) {
	o.ConfigurationSelections = v
}

func (o CartAddProductsResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartAddProductsResponseItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProductGrn) {
		toSerialize["productGrn"] = o.ProductGrn
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.ConfigurationSelections) {
		toSerialize["configurationSelections"] = o.ConfigurationSelections
	}
	return toSerialize, nil
}

type NullableCartAddProductsResponseItem struct {
	value *CartAddProductsResponseItem
	isSet bool
}

func (v NullableCartAddProductsResponseItem) Get() *CartAddProductsResponseItem {
	return v.value
}

func (v *NullableCartAddProductsResponseItem) Set(val *CartAddProductsResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCartAddProductsResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCartAddProductsResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartAddProductsResponseItem(val *CartAddProductsResponseItem) *NullableCartAddProductsResponseItem {
	return &NullableCartAddProductsResponseItem{value: val, isSet: true}
}

func (v NullableCartAddProductsResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartAddProductsResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



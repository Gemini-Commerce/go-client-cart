/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartAddProductsRequestItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartAddProductsRequestItem{}

// CartAddProductsRequestItem struct for CartAddProductsRequestItem
type CartAddProductsRequestItem struct {
	ProductGrn *string `json:"productGrn,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
	ConfigurationSelections []CartProductConfigurationSelection `json:"configurationSelections,omitempty"`
}

// NewCartAddProductsRequestItem instantiates a new CartAddProductsRequestItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartAddProductsRequestItem() *CartAddProductsRequestItem {
	this := CartAddProductsRequestItem{}
	return &this
}

// NewCartAddProductsRequestItemWithDefaults instantiates a new CartAddProductsRequestItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartAddProductsRequestItemWithDefaults() *CartAddProductsRequestItem {
	this := CartAddProductsRequestItem{}
	return &this
}

// GetProductGrn returns the ProductGrn field value if set, zero value otherwise.
func (o *CartAddProductsRequestItem) GetProductGrn() string {
	if o == nil || IsNil(o.ProductGrn) {
		var ret string
		return ret
	}
	return *o.ProductGrn
}

// GetProductGrnOk returns a tuple with the ProductGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsRequestItem) GetProductGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductGrn) {
		return nil, false
	}
	return o.ProductGrn, true
}

// HasProductGrn returns a boolean if a field has been set.
func (o *CartAddProductsRequestItem) HasProductGrn() bool {
	if o != nil && !IsNil(o.ProductGrn) {
		return true
	}

	return false
}

// SetProductGrn gets a reference to the given string and assigns it to the ProductGrn field.
func (o *CartAddProductsRequestItem) SetProductGrn(v string) {
	o.ProductGrn = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CartAddProductsRequestItem) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsRequestItem) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CartAddProductsRequestItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *CartAddProductsRequestItem) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetConfigurationSelections returns the ConfigurationSelections field value if set, zero value otherwise.
func (o *CartAddProductsRequestItem) GetConfigurationSelections() []CartProductConfigurationSelection {
	if o == nil || IsNil(o.ConfigurationSelections) {
		var ret []CartProductConfigurationSelection
		return ret
	}
	return o.ConfigurationSelections
}

// GetConfigurationSelectionsOk returns a tuple with the ConfigurationSelections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartAddProductsRequestItem) GetConfigurationSelectionsOk() ([]CartProductConfigurationSelection, bool) {
	if o == nil || IsNil(o.ConfigurationSelections) {
		return nil, false
	}
	return o.ConfigurationSelections, true
}

// HasConfigurationSelections returns a boolean if a field has been set.
func (o *CartAddProductsRequestItem) HasConfigurationSelections() bool {
	if o != nil && !IsNil(o.ConfigurationSelections) {
		return true
	}

	return false
}

// SetConfigurationSelections gets a reference to the given []CartProductConfigurationSelection and assigns it to the ConfigurationSelections field.
func (o *CartAddProductsRequestItem) SetConfigurationSelections(v []CartProductConfigurationSelection) {
	o.ConfigurationSelections = v
}

func (o CartAddProductsRequestItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartAddProductsRequestItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductGrn) {
		toSerialize["productGrn"] = o.ProductGrn
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.ConfigurationSelections) {
		toSerialize["configurationSelections"] = o.ConfigurationSelections
	}
	return toSerialize, nil
}

type NullableCartAddProductsRequestItem struct {
	value *CartAddProductsRequestItem
	isSet bool
}

func (v NullableCartAddProductsRequestItem) Get() *CartAddProductsRequestItem {
	return v.value
}

func (v *NullableCartAddProductsRequestItem) Set(val *CartAddProductsRequestItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCartAddProductsRequestItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCartAddProductsRequestItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartAddProductsRequestItem(val *CartAddProductsRequestItem) *NullableCartAddProductsRequestItem {
	return &NullableCartAddProductsRequestItem{value: val, isSet: true}
}

func (v NullableCartAddProductsRequestItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartAddProductsRequestItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartGetActiveCartByCustomerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartGetActiveCartByCustomerResponse{}

// CartGetActiveCartByCustomerResponse struct for CartGetActiveCartByCustomerResponse
type CartGetActiveCartByCustomerResponse struct {
	Cart *CartCartData `json:"cart,omitempty"`
}

// NewCartGetActiveCartByCustomerResponse instantiates a new CartGetActiveCartByCustomerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartGetActiveCartByCustomerResponse() *CartGetActiveCartByCustomerResponse {
	this := CartGetActiveCartByCustomerResponse{}
	return &this
}

// NewCartGetActiveCartByCustomerResponseWithDefaults instantiates a new CartGetActiveCartByCustomerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartGetActiveCartByCustomerResponseWithDefaults() *CartGetActiveCartByCustomerResponse {
	this := CartGetActiveCartByCustomerResponse{}
	return &this
}

// GetCart returns the Cart field value if set, zero value otherwise.
func (o *CartGetActiveCartByCustomerResponse) GetCart() CartCartData {
	if o == nil || IsNil(o.Cart) {
		var ret CartCartData
		return ret
	}
	return *o.Cart
}

// GetCartOk returns a tuple with the Cart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartGetActiveCartByCustomerResponse) GetCartOk() (*CartCartData, bool) {
	if o == nil || IsNil(o.Cart) {
		return nil, false
	}
	return o.Cart, true
}

// HasCart returns a boolean if a field has been set.
func (o *CartGetActiveCartByCustomerResponse) HasCart() bool {
	if o != nil && !IsNil(o.Cart) {
		return true
	}

	return false
}

// SetCart gets a reference to the given CartCartData and assigns it to the Cart field.
func (o *CartGetActiveCartByCustomerResponse) SetCart(v CartCartData) {
	o.Cart = &v
}

func (o CartGetActiveCartByCustomerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartGetActiveCartByCustomerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cart) {
		toSerialize["cart"] = o.Cart
	}
	return toSerialize, nil
}

type NullableCartGetActiveCartByCustomerResponse struct {
	value *CartGetActiveCartByCustomerResponse
	isSet bool
}

func (v NullableCartGetActiveCartByCustomerResponse) Get() *CartGetActiveCartByCustomerResponse {
	return v.value
}

func (v *NullableCartGetActiveCartByCustomerResponse) Set(val *CartGetActiveCartByCustomerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCartGetActiveCartByCustomerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCartGetActiveCartByCustomerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartGetActiveCartByCustomerResponse(val *CartGetActiveCartByCustomerResponse) *NullableCartGetActiveCartByCustomerResponse {
	return &NullableCartGetActiveCartByCustomerResponse{value: val, isSet: true}
}

func (v NullableCartGetActiveCartByCustomerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartGetActiveCartByCustomerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartCartItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartCartItem{}

// CartCartItem struct for CartCartItem
type CartCartItem struct {
	Id *string `json:"id,omitempty"`
	ProductGrn *string `json:"productGrn,omitempty"`
	ProductConfiguration []CartProductConfigurationStep `json:"productConfiguration,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
	Price *CartMoney `json:"price,omitempty"`
	ListPrice *CartMoney `json:"listPrice,omitempty"`
	Discount *CartMoney `json:"discount,omitempty"`
	BasePrice *CartMoney `json:"basePrice,omitempty"`
	CustomPrice *CartItemCustomPrice `json:"customPrice,omitempty"`
	VatAmount *CartMoney `json:"vatAmount,omitempty"`
	VatPercentage *float32 `json:"vatPercentage,omitempty"`
	VatInaccurate *bool `json:"vatInaccurate,omitempty"`
	VatCalculated *bool `json:"vatCalculated,omitempty"`
	LocalizedName *map[string]string `json:"localizedName,omitempty"`
	ProductCode *string `json:"productCode,omitempty"`
	ProductSku *string `json:"productSku,omitempty"`
	ImageGrn *string `json:"imageGrn,omitempty"`
	VariantOptions *string `json:"variantOptions,omitempty"`
	IsVirtual *bool `json:"isVirtual,omitempty"`
	PromotionGrns []string `json:"promotionGrns,omitempty"`
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	ProductData *string `json:"productData,omitempty"`
}

// NewCartCartItem instantiates a new CartCartItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartCartItem() *CartCartItem {
	this := CartCartItem{}
	return &this
}

// NewCartCartItemWithDefaults instantiates a new CartCartItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartCartItemWithDefaults() *CartCartItem {
	this := CartCartItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CartCartItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *CartCartItem) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CartCartItem) SetId(v string) {
	o.Id = &v
}

// GetProductGrn returns the ProductGrn field value if set, zero value otherwise.
func (o *CartCartItem) GetProductGrn() string {
	if o == nil || IsNil(o.ProductGrn) {
		var ret string
		return ret
	}
	return *o.ProductGrn
}

// GetProductGrnOk returns a tuple with the ProductGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetProductGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductGrn) {
		return nil, false
	}
	return o.ProductGrn, true
}

// IsSetProductGrn returns a boolean if a field has been set.
func (o *CartCartItem) IsSetProductGrn() bool {
	if o != nil && !IsNil(o.ProductGrn) {
		return true
	}

	return false
}

// SetProductGrn gets a reference to the given string and assigns it to the ProductGrn field.
func (o *CartCartItem) SetProductGrn(v string) {
	o.ProductGrn = &v
}

// GetProductConfiguration returns the ProductConfiguration field value if set, zero value otherwise.
func (o *CartCartItem) GetProductConfiguration() []CartProductConfigurationStep {
	if o == nil || IsNil(o.ProductConfiguration) {
		var ret []CartProductConfigurationStep
		return ret
	}
	return o.ProductConfiguration
}

// GetProductConfigurationOk returns a tuple with the ProductConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetProductConfigurationOk() ([]CartProductConfigurationStep, bool) {
	if o == nil || IsNil(o.ProductConfiguration) {
		return nil, false
	}
	return o.ProductConfiguration, true
}

// IsSetProductConfiguration returns a boolean if a field has been set.
func (o *CartCartItem) IsSetProductConfiguration() bool {
	if o != nil && !IsNil(o.ProductConfiguration) {
		return true
	}

	return false
}

// SetProductConfiguration gets a reference to the given []CartProductConfigurationStep and assigns it to the ProductConfiguration field.
func (o *CartCartItem) SetProductConfiguration(v []CartProductConfigurationStep) {
	o.ProductConfiguration = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CartCartItem) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// IsSetQuantity returns a boolean if a field has been set.
func (o *CartCartItem) IsSetQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *CartCartItem) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CartCartItem) GetPrice() CartMoney {
	if o == nil || IsNil(o.Price) {
		var ret CartMoney
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetPriceOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// IsSetPrice returns a boolean if a field has been set.
func (o *CartCartItem) IsSetPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CartMoney and assigns it to the Price field.
func (o *CartCartItem) SetPrice(v CartMoney) {
	o.Price = &v
}

// GetListPrice returns the ListPrice field value if set, zero value otherwise.
func (o *CartCartItem) GetListPrice() CartMoney {
	if o == nil || IsNil(o.ListPrice) {
		var ret CartMoney
		return ret
	}
	return *o.ListPrice
}

// GetListPriceOk returns a tuple with the ListPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetListPriceOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.ListPrice) {
		return nil, false
	}
	return o.ListPrice, true
}

// IsSetListPrice returns a boolean if a field has been set.
func (o *CartCartItem) IsSetListPrice() bool {
	if o != nil && !IsNil(o.ListPrice) {
		return true
	}

	return false
}

// SetListPrice gets a reference to the given CartMoney and assigns it to the ListPrice field.
func (o *CartCartItem) SetListPrice(v CartMoney) {
	o.ListPrice = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *CartCartItem) GetDiscount() CartMoney {
	if o == nil || IsNil(o.Discount) {
		var ret CartMoney
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetDiscountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// IsSetDiscount returns a boolean if a field has been set.
func (o *CartCartItem) IsSetDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given CartMoney and assigns it to the Discount field.
func (o *CartCartItem) SetDiscount(v CartMoney) {
	o.Discount = &v
}

// GetBasePrice returns the BasePrice field value if set, zero value otherwise.
func (o *CartCartItem) GetBasePrice() CartMoney {
	if o == nil || IsNil(o.BasePrice) {
		var ret CartMoney
		return ret
	}
	return *o.BasePrice
}

// GetBasePriceOk returns a tuple with the BasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetBasePriceOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.BasePrice) {
		return nil, false
	}
	return o.BasePrice, true
}

// IsSetBasePrice returns a boolean if a field has been set.
func (o *CartCartItem) IsSetBasePrice() bool {
	if o != nil && !IsNil(o.BasePrice) {
		return true
	}

	return false
}

// SetBasePrice gets a reference to the given CartMoney and assigns it to the BasePrice field.
func (o *CartCartItem) SetBasePrice(v CartMoney) {
	o.BasePrice = &v
}

// GetCustomPrice returns the CustomPrice field value if set, zero value otherwise.
func (o *CartCartItem) GetCustomPrice() CartItemCustomPrice {
	if o == nil || IsNil(o.CustomPrice) {
		var ret CartItemCustomPrice
		return ret
	}
	return *o.CustomPrice
}

// GetCustomPriceOk returns a tuple with the CustomPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetCustomPriceOk() (*CartItemCustomPrice, bool) {
	if o == nil || IsNil(o.CustomPrice) {
		return nil, false
	}
	return o.CustomPrice, true
}

// IsSetCustomPrice returns a boolean if a field has been set.
func (o *CartCartItem) IsSetCustomPrice() bool {
	if o != nil && !IsNil(o.CustomPrice) {
		return true
	}

	return false
}

// SetCustomPrice gets a reference to the given CartItemCustomPrice and assigns it to the CustomPrice field.
func (o *CartCartItem) SetCustomPrice(v CartItemCustomPrice) {
	o.CustomPrice = &v
}

// GetVatAmount returns the VatAmount field value if set, zero value otherwise.
func (o *CartCartItem) GetVatAmount() CartMoney {
	if o == nil || IsNil(o.VatAmount) {
		var ret CartMoney
		return ret
	}
	return *o.VatAmount
}

// GetVatAmountOk returns a tuple with the VatAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetVatAmountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.VatAmount) {
		return nil, false
	}
	return o.VatAmount, true
}

// IsSetVatAmount returns a boolean if a field has been set.
func (o *CartCartItem) IsSetVatAmount() bool {
	if o != nil && !IsNil(o.VatAmount) {
		return true
	}

	return false
}

// SetVatAmount gets a reference to the given CartMoney and assigns it to the VatAmount field.
func (o *CartCartItem) SetVatAmount(v CartMoney) {
	o.VatAmount = &v
}

// GetVatPercentage returns the VatPercentage field value if set, zero value otherwise.
func (o *CartCartItem) GetVatPercentage() float32 {
	if o == nil || IsNil(o.VatPercentage) {
		var ret float32
		return ret
	}
	return *o.VatPercentage
}

// GetVatPercentageOk returns a tuple with the VatPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetVatPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.VatPercentage) {
		return nil, false
	}
	return o.VatPercentage, true
}

// IsSetVatPercentage returns a boolean if a field has been set.
func (o *CartCartItem) IsSetVatPercentage() bool {
	if o != nil && !IsNil(o.VatPercentage) {
		return true
	}

	return false
}

// SetVatPercentage gets a reference to the given float32 and assigns it to the VatPercentage field.
func (o *CartCartItem) SetVatPercentage(v float32) {
	o.VatPercentage = &v
}

// GetVatInaccurate returns the VatInaccurate field value if set, zero value otherwise.
func (o *CartCartItem) GetVatInaccurate() bool {
	if o == nil || IsNil(o.VatInaccurate) {
		var ret bool
		return ret
	}
	return *o.VatInaccurate
}

// GetVatInaccurateOk returns a tuple with the VatInaccurate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetVatInaccurateOk() (*bool, bool) {
	if o == nil || IsNil(o.VatInaccurate) {
		return nil, false
	}
	return o.VatInaccurate, true
}

// IsSetVatInaccurate returns a boolean if a field has been set.
func (o *CartCartItem) IsSetVatInaccurate() bool {
	if o != nil && !IsNil(o.VatInaccurate) {
		return true
	}

	return false
}

// SetVatInaccurate gets a reference to the given bool and assigns it to the VatInaccurate field.
func (o *CartCartItem) SetVatInaccurate(v bool) {
	o.VatInaccurate = &v
}

// GetVatCalculated returns the VatCalculated field value if set, zero value otherwise.
func (o *CartCartItem) GetVatCalculated() bool {
	if o == nil || IsNil(o.VatCalculated) {
		var ret bool
		return ret
	}
	return *o.VatCalculated
}

// GetVatCalculatedOk returns a tuple with the VatCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetVatCalculatedOk() (*bool, bool) {
	if o == nil || IsNil(o.VatCalculated) {
		return nil, false
	}
	return o.VatCalculated, true
}

// IsSetVatCalculated returns a boolean if a field has been set.
func (o *CartCartItem) IsSetVatCalculated() bool {
	if o != nil && !IsNil(o.VatCalculated) {
		return true
	}

	return false
}

// SetVatCalculated gets a reference to the given bool and assigns it to the VatCalculated field.
func (o *CartCartItem) SetVatCalculated(v bool) {
	o.VatCalculated = &v
}

// GetLocalizedName returns the LocalizedName field value if set, zero value otherwise.
func (o *CartCartItem) GetLocalizedName() map[string]string {
	if o == nil || IsNil(o.LocalizedName) {
		var ret map[string]string
		return ret
	}
	return *o.LocalizedName
}

// GetLocalizedNameOk returns a tuple with the LocalizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetLocalizedNameOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.LocalizedName) {
		return nil, false
	}
	return o.LocalizedName, true
}

// IsSetLocalizedName returns a boolean if a field has been set.
func (o *CartCartItem) IsSetLocalizedName() bool {
	if o != nil && !IsNil(o.LocalizedName) {
		return true
	}

	return false
}

// SetLocalizedName gets a reference to the given map[string]string and assigns it to the LocalizedName field.
func (o *CartCartItem) SetLocalizedName(v map[string]string) {
	o.LocalizedName = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *CartCartItem) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// IsSetProductCode returns a boolean if a field has been set.
func (o *CartCartItem) IsSetProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *CartCartItem) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProductSku returns the ProductSku field value if set, zero value otherwise.
func (o *CartCartItem) GetProductSku() string {
	if o == nil || IsNil(o.ProductSku) {
		var ret string
		return ret
	}
	return *o.ProductSku
}

// GetProductSkuOk returns a tuple with the ProductSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetProductSkuOk() (*string, bool) {
	if o == nil || IsNil(o.ProductSku) {
		return nil, false
	}
	return o.ProductSku, true
}

// IsSetProductSku returns a boolean if a field has been set.
func (o *CartCartItem) IsSetProductSku() bool {
	if o != nil && !IsNil(o.ProductSku) {
		return true
	}

	return false
}

// SetProductSku gets a reference to the given string and assigns it to the ProductSku field.
func (o *CartCartItem) SetProductSku(v string) {
	o.ProductSku = &v
}

// GetImageGrn returns the ImageGrn field value if set, zero value otherwise.
func (o *CartCartItem) GetImageGrn() string {
	if o == nil || IsNil(o.ImageGrn) {
		var ret string
		return ret
	}
	return *o.ImageGrn
}

// GetImageGrnOk returns a tuple with the ImageGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetImageGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ImageGrn) {
		return nil, false
	}
	return o.ImageGrn, true
}

// IsSetImageGrn returns a boolean if a field has been set.
func (o *CartCartItem) IsSetImageGrn() bool {
	if o != nil && !IsNil(o.ImageGrn) {
		return true
	}

	return false
}

// SetImageGrn gets a reference to the given string and assigns it to the ImageGrn field.
func (o *CartCartItem) SetImageGrn(v string) {
	o.ImageGrn = &v
}

// GetVariantOptions returns the VariantOptions field value if set, zero value otherwise.
func (o *CartCartItem) GetVariantOptions() string {
	if o == nil || IsNil(o.VariantOptions) {
		var ret string
		return ret
	}
	return *o.VariantOptions
}

// GetVariantOptionsOk returns a tuple with the VariantOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetVariantOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.VariantOptions) {
		return nil, false
	}
	return o.VariantOptions, true
}

// IsSetVariantOptions returns a boolean if a field has been set.
func (o *CartCartItem) IsSetVariantOptions() bool {
	if o != nil && !IsNil(o.VariantOptions) {
		return true
	}

	return false
}

// SetVariantOptions gets a reference to the given string and assigns it to the VariantOptions field.
func (o *CartCartItem) SetVariantOptions(v string) {
	o.VariantOptions = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *CartCartItem) GetIsVirtual() bool {
	if o == nil || IsNil(o.IsVirtual) {
		var ret bool
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetIsVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// IsSetIsVirtual returns a boolean if a field has been set.
func (o *CartCartItem) IsSetIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given bool and assigns it to the IsVirtual field.
func (o *CartCartItem) SetIsVirtual(v bool) {
	o.IsVirtual = &v
}

// GetPromotionGrns returns the PromotionGrns field value if set, zero value otherwise.
func (o *CartCartItem) GetPromotionGrns() []string {
	if o == nil || IsNil(o.PromotionGrns) {
		var ret []string
		return ret
	}
	return o.PromotionGrns
}

// GetPromotionGrnsOk returns a tuple with the PromotionGrns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetPromotionGrnsOk() ([]string, bool) {
	if o == nil || IsNil(o.PromotionGrns) {
		return nil, false
	}
	return o.PromotionGrns, true
}

// IsSetPromotionGrns returns a boolean if a field has been set.
func (o *CartCartItem) IsSetPromotionGrns() bool {
	if o != nil && !IsNil(o.PromotionGrns) {
		return true
	}

	return false
}

// SetPromotionGrns gets a reference to the given []string and assigns it to the PromotionGrns field.
func (o *CartCartItem) SetPromotionGrns(v []string) {
	o.PromotionGrns = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *CartCartItem) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// IsSetAdditionalInfo returns a boolean if a field has been set.
func (o *CartCartItem) IsSetAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *CartCartItem) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetProductData returns the ProductData field value if set, zero value otherwise.
func (o *CartCartItem) GetProductData() string {
	if o == nil || IsNil(o.ProductData) {
		var ret string
		return ret
	}
	return *o.ProductData
}

// GetProductDataOk returns a tuple with the ProductData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartCartItem) GetProductDataOk() (*string, bool) {
	if o == nil || IsNil(o.ProductData) {
		return nil, false
	}
	return o.ProductData, true
}

// IsSetProductData returns a boolean if a field has been set.
func (o *CartCartItem) IsSetProductData() bool {
	if o != nil && !IsNil(o.ProductData) {
		return true
	}

	return false
}

// SetProductData gets a reference to the given string and assigns it to the ProductData field.
func (o *CartCartItem) SetProductData(v string) {
	o.ProductData = &v
}

func (o CartCartItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartCartItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProductGrn) {
		toSerialize["productGrn"] = o.ProductGrn
	}
	if !IsNil(o.ProductConfiguration) {
		toSerialize["productConfiguration"] = o.ProductConfiguration
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.ListPrice) {
		toSerialize["listPrice"] = o.ListPrice
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.BasePrice) {
		toSerialize["basePrice"] = o.BasePrice
	}
	if !IsNil(o.CustomPrice) {
		toSerialize["customPrice"] = o.CustomPrice
	}
	if !IsNil(o.VatAmount) {
		toSerialize["vatAmount"] = o.VatAmount
	}
	if !IsNil(o.VatPercentage) {
		toSerialize["vatPercentage"] = o.VatPercentage
	}
	if !IsNil(o.VatInaccurate) {
		toSerialize["vatInaccurate"] = o.VatInaccurate
	}
	if !IsNil(o.VatCalculated) {
		toSerialize["vatCalculated"] = o.VatCalculated
	}
	if !IsNil(o.LocalizedName) {
		toSerialize["localizedName"] = o.LocalizedName
	}
	if !IsNil(o.ProductCode) {
		toSerialize["productCode"] = o.ProductCode
	}
	if !IsNil(o.ProductSku) {
		toSerialize["productSku"] = o.ProductSku
	}
	if !IsNil(o.ImageGrn) {
		toSerialize["imageGrn"] = o.ImageGrn
	}
	if !IsNil(o.VariantOptions) {
		toSerialize["variantOptions"] = o.VariantOptions
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["isVirtual"] = o.IsVirtual
	}
	if !IsNil(o.PromotionGrns) {
		toSerialize["promotionGrns"] = o.PromotionGrns
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.ProductData) {
		toSerialize["productData"] = o.ProductData
	}
	return toSerialize, nil
}

type NullableCartCartItem struct {
	value *CartCartItem
	isSet bool
}

func (v NullableCartCartItem) Get() *CartCartItem {
	return v.value
}

func (v *NullableCartCartItem) Set(val *CartCartItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCartCartItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCartCartItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartCartItem(val *CartCartItem) *NullableCartCartItem {
	return &NullableCartCartItem{value: val, isSet: true}
}

func (v NullableCartCartItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartCartItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



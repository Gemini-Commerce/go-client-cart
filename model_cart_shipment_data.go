/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartShipmentData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartShipmentData{}

// CartShipmentData struct for CartShipmentData
type CartShipmentData struct {
	Code *string `json:"code,omitempty"`
	Method *string `json:"method,omitempty"`
	ShipmentGrn *string `json:"shipmentGrn,omitempty"`
	Payload *string `json:"payload,omitempty"`
	CartItemIds []string `json:"cartItemIds,omitempty"`
	Fee *CartMoney `json:"fee,omitempty"`
	Label *string `json:"label,omitempty"`
	VatAmount *CartMoney `json:"vatAmount,omitempty"`
	VatPercentage *float32 `json:"vatPercentage,omitempty"`
	VatInaccurate *bool `json:"vatInaccurate,omitempty"`
	VatCalculated *bool `json:"vatCalculated,omitempty"`
}

// NewCartShipmentData instantiates a new CartShipmentData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartShipmentData() *CartShipmentData {
	this := CartShipmentData{}
	return &this
}

// NewCartShipmentDataWithDefaults instantiates a new CartShipmentData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartShipmentDataWithDefaults() *CartShipmentData {
	this := CartShipmentData{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CartShipmentData) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CartShipmentData) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CartShipmentData) SetCode(v string) {
	o.Code = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *CartShipmentData) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *CartShipmentData) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *CartShipmentData) SetMethod(v string) {
	o.Method = &v
}

// GetShipmentGrn returns the ShipmentGrn field value if set, zero value otherwise.
func (o *CartShipmentData) GetShipmentGrn() string {
	if o == nil || IsNil(o.ShipmentGrn) {
		var ret string
		return ret
	}
	return *o.ShipmentGrn
}

// GetShipmentGrnOk returns a tuple with the ShipmentGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetShipmentGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentGrn) {
		return nil, false
	}
	return o.ShipmentGrn, true
}

// HasShipmentGrn returns a boolean if a field has been set.
func (o *CartShipmentData) HasShipmentGrn() bool {
	if o != nil && !IsNil(o.ShipmentGrn) {
		return true
	}

	return false
}

// SetShipmentGrn gets a reference to the given string and assigns it to the ShipmentGrn field.
func (o *CartShipmentData) SetShipmentGrn(v string) {
	o.ShipmentGrn = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CartShipmentData) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CartShipmentData) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *CartShipmentData) SetPayload(v string) {
	o.Payload = &v
}

// GetCartItemIds returns the CartItemIds field value if set, zero value otherwise.
func (o *CartShipmentData) GetCartItemIds() []string {
	if o == nil || IsNil(o.CartItemIds) {
		var ret []string
		return ret
	}
	return o.CartItemIds
}

// GetCartItemIdsOk returns a tuple with the CartItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetCartItemIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CartItemIds) {
		return nil, false
	}
	return o.CartItemIds, true
}

// HasCartItemIds returns a boolean if a field has been set.
func (o *CartShipmentData) HasCartItemIds() bool {
	if o != nil && !IsNil(o.CartItemIds) {
		return true
	}

	return false
}

// SetCartItemIds gets a reference to the given []string and assigns it to the CartItemIds field.
func (o *CartShipmentData) SetCartItemIds(v []string) {
	o.CartItemIds = v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *CartShipmentData) GetFee() CartMoney {
	if o == nil || IsNil(o.Fee) {
		var ret CartMoney
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetFeeOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *CartShipmentData) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given CartMoney and assigns it to the Fee field.
func (o *CartShipmentData) SetFee(v CartMoney) {
	o.Fee = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CartShipmentData) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CartShipmentData) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CartShipmentData) SetLabel(v string) {
	o.Label = &v
}

// GetVatAmount returns the VatAmount field value if set, zero value otherwise.
func (o *CartShipmentData) GetVatAmount() CartMoney {
	if o == nil || IsNil(o.VatAmount) {
		var ret CartMoney
		return ret
	}
	return *o.VatAmount
}

// GetVatAmountOk returns a tuple with the VatAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetVatAmountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.VatAmount) {
		return nil, false
	}
	return o.VatAmount, true
}

// HasVatAmount returns a boolean if a field has been set.
func (o *CartShipmentData) HasVatAmount() bool {
	if o != nil && !IsNil(o.VatAmount) {
		return true
	}

	return false
}

// SetVatAmount gets a reference to the given CartMoney and assigns it to the VatAmount field.
func (o *CartShipmentData) SetVatAmount(v CartMoney) {
	o.VatAmount = &v
}

// GetVatPercentage returns the VatPercentage field value if set, zero value otherwise.
func (o *CartShipmentData) GetVatPercentage() float32 {
	if o == nil || IsNil(o.VatPercentage) {
		var ret float32
		return ret
	}
	return *o.VatPercentage
}

// GetVatPercentageOk returns a tuple with the VatPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetVatPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.VatPercentage) {
		return nil, false
	}
	return o.VatPercentage, true
}

// HasVatPercentage returns a boolean if a field has been set.
func (o *CartShipmentData) HasVatPercentage() bool {
	if o != nil && !IsNil(o.VatPercentage) {
		return true
	}

	return false
}

// SetVatPercentage gets a reference to the given float32 and assigns it to the VatPercentage field.
func (o *CartShipmentData) SetVatPercentage(v float32) {
	o.VatPercentage = &v
}

// GetVatInaccurate returns the VatInaccurate field value if set, zero value otherwise.
func (o *CartShipmentData) GetVatInaccurate() bool {
	if o == nil || IsNil(o.VatInaccurate) {
		var ret bool
		return ret
	}
	return *o.VatInaccurate
}

// GetVatInaccurateOk returns a tuple with the VatInaccurate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetVatInaccurateOk() (*bool, bool) {
	if o == nil || IsNil(o.VatInaccurate) {
		return nil, false
	}
	return o.VatInaccurate, true
}

// HasVatInaccurate returns a boolean if a field has been set.
func (o *CartShipmentData) HasVatInaccurate() bool {
	if o != nil && !IsNil(o.VatInaccurate) {
		return true
	}

	return false
}

// SetVatInaccurate gets a reference to the given bool and assigns it to the VatInaccurate field.
func (o *CartShipmentData) SetVatInaccurate(v bool) {
	o.VatInaccurate = &v
}

// GetVatCalculated returns the VatCalculated field value if set, zero value otherwise.
func (o *CartShipmentData) GetVatCalculated() bool {
	if o == nil || IsNil(o.VatCalculated) {
		var ret bool
		return ret
	}
	return *o.VatCalculated
}

// GetVatCalculatedOk returns a tuple with the VatCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipmentData) GetVatCalculatedOk() (*bool, bool) {
	if o == nil || IsNil(o.VatCalculated) {
		return nil, false
	}
	return o.VatCalculated, true
}

// HasVatCalculated returns a boolean if a field has been set.
func (o *CartShipmentData) HasVatCalculated() bool {
	if o != nil && !IsNil(o.VatCalculated) {
		return true
	}

	return false
}

// SetVatCalculated gets a reference to the given bool and assigns it to the VatCalculated field.
func (o *CartShipmentData) SetVatCalculated(v bool) {
	o.VatCalculated = &v
}

func (o CartShipmentData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartShipmentData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.ShipmentGrn) {
		toSerialize["shipmentGrn"] = o.ShipmentGrn
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.CartItemIds) {
		toSerialize["cartItemIds"] = o.CartItemIds
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.VatAmount) {
		toSerialize["vatAmount"] = o.VatAmount
	}
	if !IsNil(o.VatPercentage) {
		toSerialize["vatPercentage"] = o.VatPercentage
	}
	if !IsNil(o.VatInaccurate) {
		toSerialize["vatInaccurate"] = o.VatInaccurate
	}
	if !IsNil(o.VatCalculated) {
		toSerialize["vatCalculated"] = o.VatCalculated
	}
	return toSerialize, nil
}

type NullableCartShipmentData struct {
	value *CartShipmentData
	isSet bool
}

func (v NullableCartShipmentData) Get() *CartShipmentData {
	return v.value
}

func (v *NullableCartShipmentData) Set(val *CartShipmentData) {
	v.value = val
	v.isSet = true
}

func (v NullableCartShipmentData) IsSet() bool {
	return v.isSet
}

func (v *NullableCartShipmentData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartShipmentData(val *CartShipmentData) *NullableCartShipmentData {
	return &NullableCartShipmentData{value: val, isSet: true}
}

func (v NullableCartShipmentData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartShipmentData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



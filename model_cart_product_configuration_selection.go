/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartProductConfigurationSelection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartProductConfigurationSelection{}

// CartProductConfigurationSelection struct for CartProductConfigurationSelection
type CartProductConfigurationSelection struct {
	StepGrn *string `json:"stepGrn,omitempty"`
	Options []CartProductConfigurationSelectionOption `json:"options,omitempty"`
}

// NewCartProductConfigurationSelection instantiates a new CartProductConfigurationSelection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartProductConfigurationSelection() *CartProductConfigurationSelection {
	this := CartProductConfigurationSelection{}
	return &this
}

// NewCartProductConfigurationSelectionWithDefaults instantiates a new CartProductConfigurationSelection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartProductConfigurationSelectionWithDefaults() *CartProductConfigurationSelection {
	this := CartProductConfigurationSelection{}
	return &this
}

// GetStepGrn returns the StepGrn field value if set, zero value otherwise.
func (o *CartProductConfigurationSelection) GetStepGrn() string {
	if o == nil || IsNil(o.StepGrn) {
		var ret string
		return ret
	}
	return *o.StepGrn
}

// GetStepGrnOk returns a tuple with the StepGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationSelection) GetStepGrnOk() (*string, bool) {
	if o == nil || IsNil(o.StepGrn) {
		return nil, false
	}
	return o.StepGrn, true
}

// HasStepGrn returns a boolean if a field has been set.
func (o *CartProductConfigurationSelection) HasStepGrn() bool {
	if o != nil && !IsNil(o.StepGrn) {
		return true
	}

	return false
}

// SetStepGrn gets a reference to the given string and assigns it to the StepGrn field.
func (o *CartProductConfigurationSelection) SetStepGrn(v string) {
	o.StepGrn = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CartProductConfigurationSelection) GetOptions() []CartProductConfigurationSelectionOption {
	if o == nil || IsNil(o.Options) {
		var ret []CartProductConfigurationSelectionOption
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationSelection) GetOptionsOk() ([]CartProductConfigurationSelectionOption, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CartProductConfigurationSelection) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []CartProductConfigurationSelectionOption and assigns it to the Options field.
func (o *CartProductConfigurationSelection) SetOptions(v []CartProductConfigurationSelectionOption) {
	o.Options = v
}

func (o CartProductConfigurationSelection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartProductConfigurationSelection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StepGrn) {
		toSerialize["stepGrn"] = o.StepGrn
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableCartProductConfigurationSelection struct {
	value *CartProductConfigurationSelection
	isSet bool
}

func (v NullableCartProductConfigurationSelection) Get() *CartProductConfigurationSelection {
	return v.value
}

func (v *NullableCartProductConfigurationSelection) Set(val *CartProductConfigurationSelection) {
	v.value = val
	v.isSet = true
}

func (v NullableCartProductConfigurationSelection) IsSet() bool {
	return v.isSet
}

func (v *NullableCartProductConfigurationSelection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartProductConfigurationSelection(val *CartProductConfigurationSelection) *NullableCartProductConfigurationSelection {
	return &NullableCartProductConfigurationSelection{value: val, isSet: true}
}

func (v NullableCartProductConfigurationSelection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartProductConfigurationSelection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



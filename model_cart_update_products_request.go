/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartUpdateProductsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartUpdateProductsRequest{}

// CartUpdateProductsRequest struct for CartUpdateProductsRequest
type CartUpdateProductsRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	CartId *string `json:"cartId,omitempty"`
	Items []CartUpdateProductsRequestItem `json:"items,omitempty"`
}

// NewCartUpdateProductsRequest instantiates a new CartUpdateProductsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartUpdateProductsRequest() *CartUpdateProductsRequest {
	this := CartUpdateProductsRequest{}
	return &this
}

// NewCartUpdateProductsRequestWithDefaults instantiates a new CartUpdateProductsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartUpdateProductsRequestWithDefaults() *CartUpdateProductsRequest {
	this := CartUpdateProductsRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CartUpdateProductsRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartUpdateProductsRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// IsSetTenantId returns a boolean if a field has been set.
func (o *CartUpdateProductsRequest) IsSetTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CartUpdateProductsRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetCartId returns the CartId field value if set, zero value otherwise.
func (o *CartUpdateProductsRequest) GetCartId() string {
	if o == nil || IsNil(o.CartId) {
		var ret string
		return ret
	}
	return *o.CartId
}

// GetCartIdOk returns a tuple with the CartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartUpdateProductsRequest) GetCartIdOk() (*string, bool) {
	if o == nil || IsNil(o.CartId) {
		return nil, false
	}
	return o.CartId, true
}

// IsSetCartId returns a boolean if a field has been set.
func (o *CartUpdateProductsRequest) IsSetCartId() bool {
	if o != nil && !IsNil(o.CartId) {
		return true
	}

	return false
}

// SetCartId gets a reference to the given string and assigns it to the CartId field.
func (o *CartUpdateProductsRequest) SetCartId(v string) {
	o.CartId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CartUpdateProductsRequest) GetItems() []CartUpdateProductsRequestItem {
	if o == nil || IsNil(o.Items) {
		var ret []CartUpdateProductsRequestItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartUpdateProductsRequest) GetItemsOk() ([]CartUpdateProductsRequestItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// IsSetItems returns a boolean if a field has been set.
func (o *CartUpdateProductsRequest) IsSetItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []CartUpdateProductsRequestItem and assigns it to the Items field.
func (o *CartUpdateProductsRequest) SetItems(v []CartUpdateProductsRequestItem) {
	o.Items = v
}

func (o CartUpdateProductsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartUpdateProductsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.CartId) {
		toSerialize["cartId"] = o.CartId
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableCartUpdateProductsRequest struct {
	value *CartUpdateProductsRequest
	isSet bool
}

func (v NullableCartUpdateProductsRequest) Get() *CartUpdateProductsRequest {
	return v.value
}

func (v *NullableCartUpdateProductsRequest) Set(val *CartUpdateProductsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCartUpdateProductsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCartUpdateProductsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartUpdateProductsRequest(val *CartUpdateProductsRequest) *NullableCartUpdateProductsRequest {
	return &NullableCartUpdateProductsRequest{value: val, isSet: true}
}

func (v NullableCartUpdateProductsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartUpdateProductsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



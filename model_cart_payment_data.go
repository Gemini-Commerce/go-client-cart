/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartPaymentData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartPaymentData{}

// CartPaymentData struct for CartPaymentData
type CartPaymentData struct {
	Code *string `json:"code,omitempty"`
	Title *CartLocalizedText `json:"title,omitempty"`
	Payload *string `json:"payload,omitempty"`
	Fee *CartMoney `json:"fee,omitempty"`
	Amount *CartMoney `json:"amount,omitempty"`
	Label *CartLocalizedText `json:"label,omitempty"`
	Description *CartLocalizedText `json:"description,omitempty"`
	VatAmount *CartMoney `json:"vatAmount,omitempty"`
	VatPercentage *float32 `json:"vatPercentage,omitempty"`
	VatInaccurate *bool `json:"vatInaccurate,omitempty"`
	VatCalculated *bool `json:"vatCalculated,omitempty"`
	IsUpfront *bool `json:"isUpfront,omitempty"`
}

// NewCartPaymentData instantiates a new CartPaymentData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartPaymentData() *CartPaymentData {
	this := CartPaymentData{}
	return &this
}

// NewCartPaymentDataWithDefaults instantiates a new CartPaymentData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartPaymentDataWithDefaults() *CartPaymentData {
	this := CartPaymentData{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CartPaymentData) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// IsSetCode returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CartPaymentData) SetCode(v string) {
	o.Code = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CartPaymentData) GetTitle() CartLocalizedText {
	if o == nil || IsNil(o.Title) {
		var ret CartLocalizedText
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetTitleOk() (*CartLocalizedText, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// IsSetTitle returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given CartLocalizedText and assigns it to the Title field.
func (o *CartPaymentData) SetTitle(v CartLocalizedText) {
	o.Title = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CartPaymentData) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// IsSetPayload returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *CartPaymentData) SetPayload(v string) {
	o.Payload = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *CartPaymentData) GetFee() CartMoney {
	if o == nil || IsNil(o.Fee) {
		var ret CartMoney
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetFeeOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// IsSetFee returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given CartMoney and assigns it to the Fee field.
func (o *CartPaymentData) SetFee(v CartMoney) {
	o.Fee = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CartPaymentData) GetAmount() CartMoney {
	if o == nil || IsNil(o.Amount) {
		var ret CartMoney
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetAmountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// IsSetAmount returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CartMoney and assigns it to the Amount field.
func (o *CartPaymentData) SetAmount(v CartMoney) {
	o.Amount = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CartPaymentData) GetLabel() CartLocalizedText {
	if o == nil || IsNil(o.Label) {
		var ret CartLocalizedText
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetLabelOk() (*CartLocalizedText, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// IsSetLabel returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given CartLocalizedText and assigns it to the Label field.
func (o *CartPaymentData) SetLabel(v CartLocalizedText) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CartPaymentData) GetDescription() CartLocalizedText {
	if o == nil || IsNil(o.Description) {
		var ret CartLocalizedText
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetDescriptionOk() (*CartLocalizedText, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// IsSetDescription returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given CartLocalizedText and assigns it to the Description field.
func (o *CartPaymentData) SetDescription(v CartLocalizedText) {
	o.Description = &v
}

// GetVatAmount returns the VatAmount field value if set, zero value otherwise.
func (o *CartPaymentData) GetVatAmount() CartMoney {
	if o == nil || IsNil(o.VatAmount) {
		var ret CartMoney
		return ret
	}
	return *o.VatAmount
}

// GetVatAmountOk returns a tuple with the VatAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetVatAmountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.VatAmount) {
		return nil, false
	}
	return o.VatAmount, true
}

// IsSetVatAmount returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetVatAmount() bool {
	if o != nil && !IsNil(o.VatAmount) {
		return true
	}

	return false
}

// SetVatAmount gets a reference to the given CartMoney and assigns it to the VatAmount field.
func (o *CartPaymentData) SetVatAmount(v CartMoney) {
	o.VatAmount = &v
}

// GetVatPercentage returns the VatPercentage field value if set, zero value otherwise.
func (o *CartPaymentData) GetVatPercentage() float32 {
	if o == nil || IsNil(o.VatPercentage) {
		var ret float32
		return ret
	}
	return *o.VatPercentage
}

// GetVatPercentageOk returns a tuple with the VatPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetVatPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.VatPercentage) {
		return nil, false
	}
	return o.VatPercentage, true
}

// IsSetVatPercentage returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetVatPercentage() bool {
	if o != nil && !IsNil(o.VatPercentage) {
		return true
	}

	return false
}

// SetVatPercentage gets a reference to the given float32 and assigns it to the VatPercentage field.
func (o *CartPaymentData) SetVatPercentage(v float32) {
	o.VatPercentage = &v
}

// GetVatInaccurate returns the VatInaccurate field value if set, zero value otherwise.
func (o *CartPaymentData) GetVatInaccurate() bool {
	if o == nil || IsNil(o.VatInaccurate) {
		var ret bool
		return ret
	}
	return *o.VatInaccurate
}

// GetVatInaccurateOk returns a tuple with the VatInaccurate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetVatInaccurateOk() (*bool, bool) {
	if o == nil || IsNil(o.VatInaccurate) {
		return nil, false
	}
	return o.VatInaccurate, true
}

// IsSetVatInaccurate returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetVatInaccurate() bool {
	if o != nil && !IsNil(o.VatInaccurate) {
		return true
	}

	return false
}

// SetVatInaccurate gets a reference to the given bool and assigns it to the VatInaccurate field.
func (o *CartPaymentData) SetVatInaccurate(v bool) {
	o.VatInaccurate = &v
}

// GetVatCalculated returns the VatCalculated field value if set, zero value otherwise.
func (o *CartPaymentData) GetVatCalculated() bool {
	if o == nil || IsNil(o.VatCalculated) {
		var ret bool
		return ret
	}
	return *o.VatCalculated
}

// GetVatCalculatedOk returns a tuple with the VatCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetVatCalculatedOk() (*bool, bool) {
	if o == nil || IsNil(o.VatCalculated) {
		return nil, false
	}
	return o.VatCalculated, true
}

// IsSetVatCalculated returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetVatCalculated() bool {
	if o != nil && !IsNil(o.VatCalculated) {
		return true
	}

	return false
}

// SetVatCalculated gets a reference to the given bool and assigns it to the VatCalculated field.
func (o *CartPaymentData) SetVatCalculated(v bool) {
	o.VatCalculated = &v
}

// GetIsUpfront returns the IsUpfront field value if set, zero value otherwise.
func (o *CartPaymentData) GetIsUpfront() bool {
	if o == nil || IsNil(o.IsUpfront) {
		var ret bool
		return ret
	}
	return *o.IsUpfront
}

// GetIsUpfrontOk returns a tuple with the IsUpfront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPaymentData) GetIsUpfrontOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUpfront) {
		return nil, false
	}
	return o.IsUpfront, true
}

// IsSetIsUpfront returns a boolean if a field has been set.
func (o *CartPaymentData) IsSetIsUpfront() bool {
	if o != nil && !IsNil(o.IsUpfront) {
		return true
	}

	return false
}

// SetIsUpfront gets a reference to the given bool and assigns it to the IsUpfront field.
func (o *CartPaymentData) SetIsUpfront(v bool) {
	o.IsUpfront = &v
}

func (o CartPaymentData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartPaymentData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.VatAmount) {
		toSerialize["vatAmount"] = o.VatAmount
	}
	if !IsNil(o.VatPercentage) {
		toSerialize["vatPercentage"] = o.VatPercentage
	}
	if !IsNil(o.VatInaccurate) {
		toSerialize["vatInaccurate"] = o.VatInaccurate
	}
	if !IsNil(o.VatCalculated) {
		toSerialize["vatCalculated"] = o.VatCalculated
	}
	if !IsNil(o.IsUpfront) {
		toSerialize["isUpfront"] = o.IsUpfront
	}
	return toSerialize, nil
}

type NullableCartPaymentData struct {
	value *CartPaymentData
	isSet bool
}

func (v NullableCartPaymentData) Get() *CartPaymentData {
	return v.value
}

func (v *NullableCartPaymentData) Set(val *CartPaymentData) {
	v.value = val
	v.isSet = true
}

func (v NullableCartPaymentData) IsSet() bool {
	return v.isSet
}

func (v *NullableCartPaymentData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartPaymentData(val *CartPaymentData) *NullableCartPaymentData {
	return &NullableCartPaymentData{value: val, isSet: true}
}

func (v NullableCartPaymentData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartPaymentData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartItemCustomPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartItemCustomPrice{}

// CartItemCustomPrice struct for CartItemCustomPrice
type CartItemCustomPrice struct {
	Price *CartMoney `json:"price,omitempty"`
	PreviousPrice *CartMoney `json:"previousPrice,omitempty"`
}

// NewCartItemCustomPrice instantiates a new CartItemCustomPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartItemCustomPrice() *CartItemCustomPrice {
	this := CartItemCustomPrice{}
	return &this
}

// NewCartItemCustomPriceWithDefaults instantiates a new CartItemCustomPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartItemCustomPriceWithDefaults() *CartItemCustomPrice {
	this := CartItemCustomPrice{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CartItemCustomPrice) GetPrice() CartMoney {
	if o == nil || IsNil(o.Price) {
		var ret CartMoney
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartItemCustomPrice) GetPriceOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CartItemCustomPrice) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CartMoney and assigns it to the Price field.
func (o *CartItemCustomPrice) SetPrice(v CartMoney) {
	o.Price = &v
}

// GetPreviousPrice returns the PreviousPrice field value if set, zero value otherwise.
func (o *CartItemCustomPrice) GetPreviousPrice() CartMoney {
	if o == nil || IsNil(o.PreviousPrice) {
		var ret CartMoney
		return ret
	}
	return *o.PreviousPrice
}

// GetPreviousPriceOk returns a tuple with the PreviousPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartItemCustomPrice) GetPreviousPriceOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.PreviousPrice) {
		return nil, false
	}
	return o.PreviousPrice, true
}

// HasPreviousPrice returns a boolean if a field has been set.
func (o *CartItemCustomPrice) HasPreviousPrice() bool {
	if o != nil && !IsNil(o.PreviousPrice) {
		return true
	}

	return false
}

// SetPreviousPrice gets a reference to the given CartMoney and assigns it to the PreviousPrice field.
func (o *CartItemCustomPrice) SetPreviousPrice(v CartMoney) {
	o.PreviousPrice = &v
}

func (o CartItemCustomPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartItemCustomPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PreviousPrice) {
		toSerialize["previousPrice"] = o.PreviousPrice
	}
	return toSerialize, nil
}

type NullableCartItemCustomPrice struct {
	value *CartItemCustomPrice
	isSet bool
}

func (v NullableCartItemCustomPrice) Get() *CartItemCustomPrice {
	return v.value
}

func (v *NullableCartItemCustomPrice) Set(val *CartItemCustomPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableCartItemCustomPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableCartItemCustomPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartItemCustomPrice(val *CartItemCustomPrice) *NullableCartItemCustomPrice {
	return &NullableCartItemCustomPrice{value: val, isSet: true}
}

func (v NullableCartItemCustomPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartItemCustomPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



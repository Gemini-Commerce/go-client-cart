/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartPromotionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartPromotionData{}

// CartPromotionData struct for CartPromotionData
type CartPromotionData struct {
	PromotionGrn *string `json:"promotionGrn,omitempty"`
	Type *string `json:"type,omitempty"`
	Payload *string `json:"payload,omitempty"`
	CartItemIds []string `json:"cartItemIds,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	CouponCode *string `json:"couponCode,omitempty"`
	Discount *CartMoney `json:"discount,omitempty"`
	VatAmount *CartMoney `json:"vatAmount,omitempty"`
	VatPercentage *float32 `json:"vatPercentage,omitempty"`
	VatInaccurate *bool `json:"vatInaccurate,omitempty"`
	VatCalculated *bool `json:"vatCalculated,omitempty"`
}

// NewCartPromotionData instantiates a new CartPromotionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartPromotionData() *CartPromotionData {
	this := CartPromotionData{}
	return &this
}

// NewCartPromotionDataWithDefaults instantiates a new CartPromotionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartPromotionDataWithDefaults() *CartPromotionData {
	this := CartPromotionData{}
	return &this
}

// GetPromotionGrn returns the PromotionGrn field value if set, zero value otherwise.
func (o *CartPromotionData) GetPromotionGrn() string {
	if o == nil || IsNil(o.PromotionGrn) {
		var ret string
		return ret
	}
	return *o.PromotionGrn
}

// GetPromotionGrnOk returns a tuple with the PromotionGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetPromotionGrnOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionGrn) {
		return nil, false
	}
	return o.PromotionGrn, true
}

// HasPromotionGrn returns a boolean if a field has been set.
func (o *CartPromotionData) HasPromotionGrn() bool {
	if o != nil && !IsNil(o.PromotionGrn) {
		return true
	}

	return false
}

// SetPromotionGrn gets a reference to the given string and assigns it to the PromotionGrn field.
func (o *CartPromotionData) SetPromotionGrn(v string) {
	o.PromotionGrn = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CartPromotionData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CartPromotionData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CartPromotionData) SetType(v string) {
	o.Type = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *CartPromotionData) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CartPromotionData) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *CartPromotionData) SetPayload(v string) {
	o.Payload = &v
}

// GetCartItemIds returns the CartItemIds field value if set, zero value otherwise.
func (o *CartPromotionData) GetCartItemIds() []string {
	if o == nil || IsNil(o.CartItemIds) {
		var ret []string
		return ret
	}
	return o.CartItemIds
}

// GetCartItemIdsOk returns a tuple with the CartItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetCartItemIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CartItemIds) {
		return nil, false
	}
	return o.CartItemIds, true
}

// HasCartItemIds returns a boolean if a field has been set.
func (o *CartPromotionData) HasCartItemIds() bool {
	if o != nil && !IsNil(o.CartItemIds) {
		return true
	}

	return false
}

// SetCartItemIds gets a reference to the given []string and assigns it to the CartItemIds field.
func (o *CartPromotionData) SetCartItemIds(v []string) {
	o.CartItemIds = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CartPromotionData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CartPromotionData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CartPromotionData) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CartPromotionData) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CartPromotionData) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CartPromotionData) SetDescription(v string) {
	o.Description = &v
}

// GetCouponCode returns the CouponCode field value if set, zero value otherwise.
func (o *CartPromotionData) GetCouponCode() string {
	if o == nil || IsNil(o.CouponCode) {
		var ret string
		return ret
	}
	return *o.CouponCode
}

// GetCouponCodeOk returns a tuple with the CouponCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetCouponCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CouponCode) {
		return nil, false
	}
	return o.CouponCode, true
}

// HasCouponCode returns a boolean if a field has been set.
func (o *CartPromotionData) HasCouponCode() bool {
	if o != nil && !IsNil(o.CouponCode) {
		return true
	}

	return false
}

// SetCouponCode gets a reference to the given string and assigns it to the CouponCode field.
func (o *CartPromotionData) SetCouponCode(v string) {
	o.CouponCode = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *CartPromotionData) GetDiscount() CartMoney {
	if o == nil || IsNil(o.Discount) {
		var ret CartMoney
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetDiscountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *CartPromotionData) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given CartMoney and assigns it to the Discount field.
func (o *CartPromotionData) SetDiscount(v CartMoney) {
	o.Discount = &v
}

// GetVatAmount returns the VatAmount field value if set, zero value otherwise.
func (o *CartPromotionData) GetVatAmount() CartMoney {
	if o == nil || IsNil(o.VatAmount) {
		var ret CartMoney
		return ret
	}
	return *o.VatAmount
}

// GetVatAmountOk returns a tuple with the VatAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetVatAmountOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.VatAmount) {
		return nil, false
	}
	return o.VatAmount, true
}

// HasVatAmount returns a boolean if a field has been set.
func (o *CartPromotionData) HasVatAmount() bool {
	if o != nil && !IsNil(o.VatAmount) {
		return true
	}

	return false
}

// SetVatAmount gets a reference to the given CartMoney and assigns it to the VatAmount field.
func (o *CartPromotionData) SetVatAmount(v CartMoney) {
	o.VatAmount = &v
}

// GetVatPercentage returns the VatPercentage field value if set, zero value otherwise.
func (o *CartPromotionData) GetVatPercentage() float32 {
	if o == nil || IsNil(o.VatPercentage) {
		var ret float32
		return ret
	}
	return *o.VatPercentage
}

// GetVatPercentageOk returns a tuple with the VatPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetVatPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.VatPercentage) {
		return nil, false
	}
	return o.VatPercentage, true
}

// HasVatPercentage returns a boolean if a field has been set.
func (o *CartPromotionData) HasVatPercentage() bool {
	if o != nil && !IsNil(o.VatPercentage) {
		return true
	}

	return false
}

// SetVatPercentage gets a reference to the given float32 and assigns it to the VatPercentage field.
func (o *CartPromotionData) SetVatPercentage(v float32) {
	o.VatPercentage = &v
}

// GetVatInaccurate returns the VatInaccurate field value if set, zero value otherwise.
func (o *CartPromotionData) GetVatInaccurate() bool {
	if o == nil || IsNil(o.VatInaccurate) {
		var ret bool
		return ret
	}
	return *o.VatInaccurate
}

// GetVatInaccurateOk returns a tuple with the VatInaccurate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetVatInaccurateOk() (*bool, bool) {
	if o == nil || IsNil(o.VatInaccurate) {
		return nil, false
	}
	return o.VatInaccurate, true
}

// HasVatInaccurate returns a boolean if a field has been set.
func (o *CartPromotionData) HasVatInaccurate() bool {
	if o != nil && !IsNil(o.VatInaccurate) {
		return true
	}

	return false
}

// SetVatInaccurate gets a reference to the given bool and assigns it to the VatInaccurate field.
func (o *CartPromotionData) SetVatInaccurate(v bool) {
	o.VatInaccurate = &v
}

// GetVatCalculated returns the VatCalculated field value if set, zero value otherwise.
func (o *CartPromotionData) GetVatCalculated() bool {
	if o == nil || IsNil(o.VatCalculated) {
		var ret bool
		return ret
	}
	return *o.VatCalculated
}

// GetVatCalculatedOk returns a tuple with the VatCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartPromotionData) GetVatCalculatedOk() (*bool, bool) {
	if o == nil || IsNil(o.VatCalculated) {
		return nil, false
	}
	return o.VatCalculated, true
}

// HasVatCalculated returns a boolean if a field has been set.
func (o *CartPromotionData) HasVatCalculated() bool {
	if o != nil && !IsNil(o.VatCalculated) {
		return true
	}

	return false
}

// SetVatCalculated gets a reference to the given bool and assigns it to the VatCalculated field.
func (o *CartPromotionData) SetVatCalculated(v bool) {
	o.VatCalculated = &v
}

func (o CartPromotionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartPromotionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PromotionGrn) {
		toSerialize["promotionGrn"] = o.PromotionGrn
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.CartItemIds) {
		toSerialize["cartItemIds"] = o.CartItemIds
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CouponCode) {
		toSerialize["couponCode"] = o.CouponCode
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.VatAmount) {
		toSerialize["vatAmount"] = o.VatAmount
	}
	if !IsNil(o.VatPercentage) {
		toSerialize["vatPercentage"] = o.VatPercentage
	}
	if !IsNil(o.VatInaccurate) {
		toSerialize["vatInaccurate"] = o.VatInaccurate
	}
	if !IsNil(o.VatCalculated) {
		toSerialize["vatCalculated"] = o.VatCalculated
	}
	return toSerialize, nil
}

type NullableCartPromotionData struct {
	value *CartPromotionData
	isSet bool
}

func (v NullableCartPromotionData) Get() *CartPromotionData {
	return v.value
}

func (v *NullableCartPromotionData) Set(val *CartPromotionData) {
	v.value = val
	v.isSet = true
}

func (v NullableCartPromotionData) IsSet() bool {
	return v.isSet
}

func (v *NullableCartPromotionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartPromotionData(val *CartPromotionData) *NullableCartPromotionData {
	return &NullableCartPromotionData{value: val, isSet: true}
}

func (v NullableCartPromotionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartPromotionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartProductConfigurationStepOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartProductConfigurationStepOption{}

// CartProductConfigurationStepOption struct for CartProductConfigurationStepOption
type CartProductConfigurationStepOption struct {
	Id *string `json:"id,omitempty"`
	Grn *string `json:"grn,omitempty"`
	Label *CartLocalizedText `json:"label,omitempty"`
	PriceVariation *CartMoney `json:"priceVariation,omitempty"`
	WeightVariation *float32 `json:"weightVariation,omitempty"`
	Image *OptionImage `json:"image,omitempty"`
	HasQuantity *bool `json:"hasQuantity,omitempty"`
	Quantity *int64 `json:"quantity,omitempty"`
}

// NewCartProductConfigurationStepOption instantiates a new CartProductConfigurationStepOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartProductConfigurationStepOption() *CartProductConfigurationStepOption {
	this := CartProductConfigurationStepOption{}
	return &this
}

// NewCartProductConfigurationStepOptionWithDefaults instantiates a new CartProductConfigurationStepOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartProductConfigurationStepOptionWithDefaults() *CartProductConfigurationStepOption {
	this := CartProductConfigurationStepOption{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CartProductConfigurationStepOption) SetId(v string) {
	o.Id = &v
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetGrn() string {
	if o == nil || IsNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetGrnOk() (*string, bool) {
	if o == nil || IsNil(o.Grn) {
		return nil, false
	}
	return o.Grn, true
}

// HasGrn returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasGrn() bool {
	if o != nil && !IsNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *CartProductConfigurationStepOption) SetGrn(v string) {
	o.Grn = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetLabel() CartLocalizedText {
	if o == nil || IsNil(o.Label) {
		var ret CartLocalizedText
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetLabelOk() (*CartLocalizedText, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given CartLocalizedText and assigns it to the Label field.
func (o *CartProductConfigurationStepOption) SetLabel(v CartLocalizedText) {
	o.Label = &v
}

// GetPriceVariation returns the PriceVariation field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetPriceVariation() CartMoney {
	if o == nil || IsNil(o.PriceVariation) {
		var ret CartMoney
		return ret
	}
	return *o.PriceVariation
}

// GetPriceVariationOk returns a tuple with the PriceVariation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetPriceVariationOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.PriceVariation) {
		return nil, false
	}
	return o.PriceVariation, true
}

// HasPriceVariation returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasPriceVariation() bool {
	if o != nil && !IsNil(o.PriceVariation) {
		return true
	}

	return false
}

// SetPriceVariation gets a reference to the given CartMoney and assigns it to the PriceVariation field.
func (o *CartProductConfigurationStepOption) SetPriceVariation(v CartMoney) {
	o.PriceVariation = &v
}

// GetWeightVariation returns the WeightVariation field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetWeightVariation() float32 {
	if o == nil || IsNil(o.WeightVariation) {
		var ret float32
		return ret
	}
	return *o.WeightVariation
}

// GetWeightVariationOk returns a tuple with the WeightVariation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetWeightVariationOk() (*float32, bool) {
	if o == nil || IsNil(o.WeightVariation) {
		return nil, false
	}
	return o.WeightVariation, true
}

// HasWeightVariation returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasWeightVariation() bool {
	if o != nil && !IsNil(o.WeightVariation) {
		return true
	}

	return false
}

// SetWeightVariation gets a reference to the given float32 and assigns it to the WeightVariation field.
func (o *CartProductConfigurationStepOption) SetWeightVariation(v float32) {
	o.WeightVariation = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetImage() OptionImage {
	if o == nil || IsNil(o.Image) {
		var ret OptionImage
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetImageOk() (*OptionImage, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given OptionImage and assigns it to the Image field.
func (o *CartProductConfigurationStepOption) SetImage(v OptionImage) {
	o.Image = &v
}

// GetHasQuantity returns the HasQuantity field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetHasQuantity() bool {
	if o == nil || IsNil(o.HasQuantity) {
		var ret bool
		return ret
	}
	return *o.HasQuantity
}

// GetHasQuantityOk returns a tuple with the HasQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetHasQuantityOk() (*bool, bool) {
	if o == nil || IsNil(o.HasQuantity) {
		return nil, false
	}
	return o.HasQuantity, true
}

// HasHasQuantity returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasHasQuantity() bool {
	if o != nil && !IsNil(o.HasQuantity) {
		return true
	}

	return false
}

// SetHasQuantity gets a reference to the given bool and assigns it to the HasQuantity field.
func (o *CartProductConfigurationStepOption) SetHasQuantity(v bool) {
	o.HasQuantity = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CartProductConfigurationStepOption) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartProductConfigurationStepOption) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CartProductConfigurationStepOption) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *CartProductConfigurationStepOption) SetQuantity(v int64) {
	o.Quantity = &v
}

func (o CartProductConfigurationStepOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartProductConfigurationStepOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.PriceVariation) {
		toSerialize["priceVariation"] = o.PriceVariation
	}
	if !IsNil(o.WeightVariation) {
		toSerialize["weightVariation"] = o.WeightVariation
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.HasQuantity) {
		toSerialize["hasQuantity"] = o.HasQuantity
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	return toSerialize, nil
}

type NullableCartProductConfigurationStepOption struct {
	value *CartProductConfigurationStepOption
	isSet bool
}

func (v NullableCartProductConfigurationStepOption) Get() *CartProductConfigurationStepOption {
	return v.value
}

func (v *NullableCartProductConfigurationStepOption) Set(val *CartProductConfigurationStepOption) {
	v.value = val
	v.isSet = true
}

func (v NullableCartProductConfigurationStepOption) IsSet() bool {
	return v.isSet
}

func (v *NullableCartProductConfigurationStepOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartProductConfigurationStepOption(val *CartProductConfigurationStepOption) *NullableCartProductConfigurationStepOption {
	return &NullableCartProductConfigurationStepOption{value: val, isSet: true}
}

func (v NullableCartProductConfigurationStepOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartProductConfigurationStepOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Cart Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cart

import (
	"encoding/json"
)

// checks if the CartSetPaymentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartSetPaymentsResponse{}

// CartSetPaymentsResponse struct for CartSetPaymentsResponse
type CartSetPaymentsResponse struct {
	TotalDue *CartMoney `json:"totalDue,omitempty"`
}

// NewCartSetPaymentsResponse instantiates a new CartSetPaymentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartSetPaymentsResponse() *CartSetPaymentsResponse {
	this := CartSetPaymentsResponse{}
	return &this
}

// NewCartSetPaymentsResponseWithDefaults instantiates a new CartSetPaymentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartSetPaymentsResponseWithDefaults() *CartSetPaymentsResponse {
	this := CartSetPaymentsResponse{}
	return &this
}

// GetTotalDue returns the TotalDue field value if set, zero value otherwise.
func (o *CartSetPaymentsResponse) GetTotalDue() CartMoney {
	if o == nil || IsNil(o.TotalDue) {
		var ret CartMoney
		return ret
	}
	return *o.TotalDue
}

// GetTotalDueOk returns a tuple with the TotalDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartSetPaymentsResponse) GetTotalDueOk() (*CartMoney, bool) {
	if o == nil || IsNil(o.TotalDue) {
		return nil, false
	}
	return o.TotalDue, true
}

// IsSetTotalDue returns a boolean if a field has been set.
func (o *CartSetPaymentsResponse) IsSetTotalDue() bool {
	if o != nil && !IsNil(o.TotalDue) {
		return true
	}

	return false
}

// SetTotalDue gets a reference to the given CartMoney and assigns it to the TotalDue field.
func (o *CartSetPaymentsResponse) SetTotalDue(v CartMoney) {
	o.TotalDue = &v
}

func (o CartSetPaymentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartSetPaymentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalDue) {
		toSerialize["totalDue"] = o.TotalDue
	}
	return toSerialize, nil
}

type NullableCartSetPaymentsResponse struct {
	value *CartSetPaymentsResponse
	isSet bool
}

func (v NullableCartSetPaymentsResponse) Get() *CartSetPaymentsResponse {
	return v.value
}

func (v *NullableCartSetPaymentsResponse) Set(val *CartSetPaymentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCartSetPaymentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCartSetPaymentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartSetPaymentsResponse(val *CartSetPaymentsResponse) *NullableCartSetPaymentsResponse {
	return &NullableCartSetPaymentsResponse{value: val, isSet: true}
}

func (v NullableCartSetPaymentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartSetPaymentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


